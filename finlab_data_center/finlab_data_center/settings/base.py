"""
Django settings for finlab_data_center project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import json5
import pymysql
# resolve django.core.exceptions.ImproperlyConfigured: mysqlclient 1.4.0 or newer is required; you have 0.10.0.
pymysql.version_info = (1, 4, 6, "final", 0)
pymysql.install_as_MySQLdb()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'grappelli',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'django_q',
    'us_data',
    'tw_data',
    'etl',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'finlab_data_center.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

            ],
        },
    },
]

WSGI_APPLICATION = 'finlab_data_center.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

with open(os.path.join(BASE_DIR, "config.json"), encoding='utf8') as file:
    CONFIG_DATA = json5.load(file)

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

CONFIG_DATA["PRODUCTION"] = False

DATABASE_ROUTERS = [
    'finlab_data_center.db_routers.AdminRouter',
    'finlab_data_center.db_routers.USDataRouter',
    'finlab_data_center.db_routers.TWDataRouter'
]

# quandl data download auth key
QUANDL_API_KEY = os.getenv('QUANDL_API_KEY', CONFIG_DATA["QUANDL_API_KEY"]),

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hant'
TIME_ZONE = 'Asia/Taipei'
USE_I18N = False
USE_L10N = False
USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

# django 3.0 new items
os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"

# django-q broker
Q_CLUSTER = {
    'name': 'DjangORM',
    'workers': 4,
    'timeout': 1800,
    'retry': 2000,
    'queue_limit': 20,
    'bulk': 10,
    'orm': 'admin_db',
    'max_attempts': 1,
}

# jupyter extension notebook for docker env args
# NOTEBOOK_ARGUMENTS = ["--ip", "0.0.0.0", "--port", "8880", "--allow-root"]
